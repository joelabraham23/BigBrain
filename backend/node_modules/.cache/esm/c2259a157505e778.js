_750‍.x([["quizQuestionPublicReturn",()=>quizQuestionPublicReturn],["quizQuestionGetCorrectAnswers",()=>quizQuestionGetCorrectAnswers],["quizQuestionGetAnswers",()=>quizQuestionGetAnswers],["quizQuestionGetDuration",()=>quizQuestionGetDuration]]);/*
 For a given data structure of a question, produce another
 object that doesn't contain any important meta data (e.g. the answer)
 to return to a "player"
*/
       const quizQuestionPublicReturn = question => {
  return question;
};

/*
 For a given data structure of a question, get the IDs of
 the correct answers (minimum 1).
*/
       const quizQuestionGetCorrectAnswers = question => {
  const checkedAnswerIds = Object.entries(question.checkedAnswers)
    .filter(([id, checked]) => checked === true)
    .map(([id]) => parseInt(id, 10))
    .map(String);
  return checkedAnswerIds; // Return an array of checked answer IDs
};
/*
 For a given data structure of a question, get the IDs of
 all of the answers, correct or incorrect.
*/
       const quizQuestionGetAnswers = question => {
  return [
    123,
    456,
    678,
  ]; // For a single answer
};

/*
 For a given data structure of a question, get the duration
 of the question once it starts. (Seconds)
*/
       const quizQuestionGetDuration = question => {
  return question.timeLimit;
};
